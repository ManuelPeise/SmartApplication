// <auto-generated />
using System;
using Data.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Databases.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250130081737_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Data.Shared.Email.EmailAddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmailAddressTable");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailFolderMappingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PredictedFolderId")
                        .HasColumnType("int");

                    b.Property<string>("SettingsGuid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ShouldCleanup")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SourceFolder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("FolderId");

                    b.HasIndex("PredictedFolderId");

                    b.ToTable("EmailFolderMappingTable");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailMappingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PredictedAsSpam")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PredictedTargetFolder")
                        .HasColumnType("longtext");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool>("UserDefinedAsSpam")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserDefinedTargetFolder")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("SubjectId");

                    b.ToTable("EmailMappingTable");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailSubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmailSubjectTable");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailTargetFolderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResourceKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TargetFolderName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmailTargetFolderTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6972),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderUnknown",
                            TargetFolderName = "Unknown"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6977),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderFoodOrder",
                            TargetFolderName = "Food"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6978),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderTravel",
                            TargetFolderName = "Travel"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6979),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderTax",
                            TargetFolderName = "Tax"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6979),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderAccounts",
                            TargetFolderName = "Accounts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6981),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderHealth",
                            TargetFolderName = "Health"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6981),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderRentAndReside",
                            TargetFolderName = "RentAndReside"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6982),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderArchiv",
                            TargetFolderName = "Archiv"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6982),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderSpam",
                            TargetFolderName = "Spam"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6984),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderFamilyAndFriends",
                            TargetFolderName = "FamilyAndFriends"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6984),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderShopping",
                            TargetFolderName = "Shopping"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6985),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderSocialMedia",
                            TargetFolderName = "SocialMedia"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6985),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderCar",
                            TargetFolderName = "Car"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6985),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderTelecommunication",
                            TargetFolderName = "Telecommunication"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6986),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderBankAndPayments",
                            TargetFolderName = "BankAndPayments"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 1, 30, 8, 17, 36, 634, DateTimeKind.Utc).AddTicks(6986),
                            CreatedBy = "System",
                            ResourceKey = "labelFolderOther",
                            TargetFolderName = "Other"
                        });
                });

            modelBuilder.Entity("Data.Shared.Logging.LogMessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<string>("Module")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LogMessageTable");
                });

            modelBuilder.Entity("Data.Shared.Settings.GenericSettingsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int");

                    b.Property<string>("SettingsJson")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GenericSettingsTable");
                });

            modelBuilder.Entity("Data.Shared.Tools.EmailDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EmailDataTable");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailFolderMappingEntity", b =>
                {
                    b.HasOne("Data.Shared.Email.EmailAddressEntity", "AddressEntity")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Shared.Email.EmailTargetFolderEntity", "FolderEntity")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Shared.Email.EmailTargetFolderEntity", "PredictedFolderEntity")
                        .WithMany()
                        .HasForeignKey("PredictedFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressEntity");

                    b.Navigation("FolderEntity");

                    b.Navigation("PredictedFolderEntity");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailMappingEntity", b =>
                {
                    b.HasOne("Data.Shared.Email.EmailAddressEntity", "AddressEntity")
                        .WithMany("MappingEntities")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Shared.Email.EmailSubjectEntity", "SubjectEntity")
                        .WithMany("MappingEntities")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressEntity");

                    b.Navigation("SubjectEntity");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailAddressEntity", b =>
                {
                    b.Navigation("MappingEntities");
                });

            modelBuilder.Entity("Data.Shared.Email.EmailSubjectEntity", b =>
                {
                    b.Navigation("MappingEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
